task update_stats: :environment do
	input_array = ["SRCE,MMM,AOS,AAN,ABT,ABBV,ABM,AKR,ACN,ACU,ATVI,WMS,AES,AFL,AGCO,A,ADC,AL,APD,AYR,ALK,ALB,ALX,ARE,ALLE,ALE,LNT,ALL,AIMC,MO,DOX,AEE,AAT,ACC,AEP,AEL,AXP,AFG,AWR,AMT,AWK,APU,AMP,AMSF,ABC,ATLO,AMGN,APH,ADI,ANDX,ANDE,ANTM,AON,AIV,APOG,APLO,AAPL,AIT,ATR,WTR,ARMK,ABR,ADM,ARGO,AHH,AMNF,AROW,ARTNA,AJG,ASH,AHL,ASB,AIZ,AGO,T,ATO,ATRI,AUBN,ALV,ADP,AVB,AVY,AVA,AVT,AVX,AXS,BGS,BMI,BCPC,BANF,BXS,BAC,BORT,BMRC,BK,BKSC,OZK,BKUTK,BFIN,BANR",
				   "BHB,B,BSET,BBT,BDX,BMS,BBY,BIG,BKH,BLK,BA,BOKF,BAH,BWA,BPFH,BRC,EAT,BMY,BRX,AVGO,BR,BAM,BIP,BPY,BEP,BRO,BF-B,BC,BMTC,BT,BG,CFFI,CHRW,CBT,CVGW,CWT,TYCB,CATC,CPT,CNI,CMD,CCBG,CAH,CTRE,CSL,CARO,CRI,CASY,CASS,CAT,CATY,CBOE,CCFN,CDW,FUN,CE,CNP,CPF,CCF,CAKE,CHE,CHFC,CPKF,CPK,CVX,CHS,PLCE,CB,CHD,CHDN,CINF,CTAS,CSCO,CZWI,CFG,CZFS,CHCO,CIVB,CWEN,CLX,CME,CMS,CNO,KO,CVLY,CCOI,CNS,CL,COLB,COLM,CMCSA,CMA,FIX,CBSH,CBU,CTBI,CWBC,CSVI,CTWS",
				   "ED,CTO,CORE,COR,GLW,CLDB,COST,CBRL,CCI,CSGS,CSX,CUBE,CFR,CULP,CMI,CONE,DHR,DKL,DAL,XRAY,DHIL,DLR,DDS,DFS,DLB,D,DPZ,UFS,DCI,DGICA,DGICB,PLOW,DEI,DOV,DTE,DUK,DNB,DNKN,EBMT,EFSI,EGP,EMN,ETN,EV,ECL,EIX,EE,EMCI,EMCF,EMR,ENB,EHC,ET,ENSG,EBTC,EPD,EVC,EPR,EQM,ELS,ERIE,ESCA,ESS,EL,EVBN,EVR,RE,EVRG,ES,EXSR,EXPE,EXPD,EXPO,STAY,EXR,XOM,FMBM,FDS,FMCB,FMAO,FBVA,FAST,FFG,AGM,FRT,FDX,FNF,FITB,FISI,FAF,FNLC,BUSE,FBIZ,FCBC,FCCO,FDEF,FFMR,FFIN,THFF",
				   "FHN,FR,FIBK,FRME,FMBH,FMBI,FXNC,FLIC,FRC,FSFG,FLXS,FLIR,FLO,FFIC,FL,FORR,FBHS,FNV,FELE,BEN,FSBW,GLPI,GLOP,GATX,GD,GIS,GNTX,GPC,GEO,GABC,GTY,GIL,GBCI,GAIN,GS,GT,GRC,GGG,GSBC,GBX,GFF,GPI,GBNK,GFED,FUL,HAFC,THG,HOG,HRS,HIG,HAS,HVT,HVT-A,HWKN,HWBK,HDB,HCSG,HTA,HLAN,HEI,HP,HNNA,HTBK,HFWA,MLHR,HSY,HI,HRC,HIFS,HNI,HMLP,HEP,HBCP,HOMB,HD,HFBL,HONT,HON,HOPE,HMN,HBNC,HRL,HPT,HPQ,HUBB,HUM,HBAN,HII,HURC,HY,IDA,IEX,ITW,IHC,INDB,IBCP,IBTX,IR,INGR",
				   "IOSP,NSP,IPAR,ICE,TILE,IBOC,IBM,IFF,IP,ISCA,IPG,INTU,IVZ,ISTR,ISBC,IRM,ISBA,ITT,JJSF,SJM,JCOM,JKHY,JBHT,JW-A,JNJ,JCI,JOUT,JLL,JPM,KAI,KALU,KSU,KAR,K,KW,KEQU,KEY,KMB,KIM,KINS,KRG,KLAC,KSS,KHC,KR,LLL,LBAI,LKFN,LRCX,LAMR,LANC,LARK,LSTR,LVS,LAZ,LZB,LEA,LTXB,LM,LEG,LMAT,LII,LXP,LSI,LMNR,LECO,LNC,LIN,LNN,LAD,LFUS,LMT,LOGN,LOGI,LOW,LYB,LYBC,MCBC,MAC,MFNC,MMP,MGA,MAIN,MLGF,LOAN,MAN,MFC,MPC,MCS,MKTX,MNAT,VAC,MAR,MMC,MAS,MA,MTRN,MATX,MATW",
				   "MXIM,MBFI,MKC,MCD,MGRC,MCK,MDU,MPW,MDT,MBWM,MRK,MCY,MDP,MEOH,MET,MGEE,MCHP,MSFT,MPB,MAA,MSEX,MOFG,MKSI,MINI,MC,MDLZ,TYPE,MNRO,MCO,MS,MORN,MSI,MPLX,MSA,MSM,MSCI,MYBF,MFSF,NC,NASB,NDAQ,NKSH,NFG,NHI,NHC,NATI,NNN,NHTC,NBTB,NP,NTAP,NJR,NEWM,NRZ,NEU,NXST,NEE,NEP,NLSN,NKE,NI,NDSN,NIDB,NTRS,NFBK,NRIM,NOC,NWBI,NWN,NWE,NWFL,NUS,NUE,NVDA,OVLY,OXY,OCFC,OGE,ODC,OLBK,ORI,OHI,OMC,OGS,OLP,OKE,OTEX,ORCL,OSK,OTTR,OC,ORM,OXM,GLT,PCAR,PKG,PZZA,PKBK,PH",
				   "PEGI,PDCO,PAYX,PBFX,PAG,PNR,PEBK,PPLL,PBCT,PEP,PRGO,PETS,PFE,PM,PSX,PSXP,PPBN,PNW,PNBI,PNC,PNM,PII,POL,POOL,POR,PTBS,POWI,PPG,PPL,APTS,PFBC,PRI,PRIM,PFG,PG,PLD,PB,PROV,PFS,PRU,PSB,PSBQ,PEG,QNBC,QTS,QNTO,KWR,QCOM,DGX,RJF,RTN,RMAX,O,RBC,REG,RF,RGA,RS,RNR,RBCAA,RSG,RMD,RECN,ROIC,REXR,RGCO,RBA,RLI,RHI,ROK,ROL,ROP,ROST,RCL,RGLD,RPM,RUTH,R,RHP,SPGI,STBA,SBRA,SAFM,SASR,BFS,SBFG,SWM,SMG,SEIC,SIGI,SRE,SXT,SCI,SFBS,SHEN,SHW,SHPG,SCVL,BSRR",
				   "SIG,SLGN,SFNC,SPG,SSD,SBGI,SIX,SJW,SWKS,SLG,SNA,SON,SOHO,SFBC,SJI,SSB,SO,SOMC,SMBC,SBSI,LUV,SWX,SGB,SPTN,SEP,SR,SRLP,STAG,SMP,SXI,SWK,SGU,SBUX,STT,STLD,SCS,SCL,STE,SYBT,STRT,SYK,STBI,INN,STI,SGC,SNX,SNV,SYY,TROW,SKT,TGT,TCO,AMTD,TEL,TDS,TNC,TEX,TRNO,TBNK,TTEK,TXN,TPL,TXRH,TFSL,HCKT,THVB,TRI,THO,TIF,TSBK,TKR,TJX,TMP,TR,TMK,TTC,TOWN,TSCO,TLP,TRV,TCBK,TYBT,TRN,TRUX,TRCB,TSN,USB,UDR,UGI,UMBF,UMPQ,UBSH,UNB,UNP,UBCP,UBSI,UCBI,UCFC,UFCS",
				   "UPS,UTX,UNH,UNTY,UVV,UFPI,UHT,UNM,UBA,USPH,UTMD,MTN,VLO,VLP,VGR,VVC,VTR,VZ,VFC,V,VSEC,VMC,WPC,WRB,WTBFA,GWW,WBA,WMT,DIS,WAFD,WASH,WCN,WM,WSO,WTS,WDFC,WBS,WEC,WRI,WEBK,WFC,WEN,WSBC,WTBA,WST,WABC,WGP,WES,WAB,WLK,WLKP,WRK,WHG,WEYS,WY,WHR,WMPN,WSM,WLTW,WINA,WTFC,WDFN,WOR,WPP,WSFS,WYND,XEL,XLNX,XYL,YORW,ZION,ZTS"]

	input_array.each do |input|
		result = IexTradingApi.get_stock_stats_batch(input)

		result.each do |item|
			symbol_data = item[1][:company][:symbol]
			stock = Stock.find_by(symbol: symbol_data)

			# if stock.nil?
			# 	stock = Stock.create(symbol: item[1][:company][:symbol], company_name: item[1][:company][:companyName], sector: item[1][:company][:sector], industry: item[1][:company][:industry])
			# end

			if stock.nil?
				puts "Missing object for #{symbol_data}"
			else
				Stat.create(stock: stock, dividend_yield: item[1][:stats][:dividendYield])
			end
	end

	end
end